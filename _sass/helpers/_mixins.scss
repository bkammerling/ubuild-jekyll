@mixin placeholder {
  ::-webkit-input-placeholder {@content}
  :-moz-placeholder           {@content}
  ::-moz-placeholder          {@content}
  :-ms-input-placeholder      {@content}
}

@mixin rwd($point) {
  @if $point == mobile-up {
    @media (min-width: $mobile) {
      @content;
    }
  }
  @else if $point == tablet-up {
    @media (min-width: $tablet) {
      @content;
    }
  }
  @else if $point == desktop2-up {
    @media (min-width: $desktop2) {
      @content;
    }
  }
  @else if $point == desktop-up {
    @media (min-width: $desktop) {
      @content;
    }
  }
  @else if $point == wide-up {
    @media (min-width: $desktop-wide) {
      @content;
    }
  }
  @else if $point == tablet-down {
    @media (max-width: $tablet - 1) {
      @content;
    }
  }
  @else if $point == desktop-down {
    @media (max-width: $desktop - 1) {
      @content;
    }
  }
  @else {
    @media (min-width: $point) {
      @content;
    }
  }
}

@function rem($size) {
  $remSize: $size / 16px;
  @return #{$remSize}rem;
}


// Prefix for Hover class names
$nameSpace: 'hvr' !default;

// Durations
$fastDuration: .1s !default;
$mediumDuration: .3s !default;
$slowDuration: .5s !default;

// Colors
$primaryColor: #e1e1e1 !default;
$secondaryColor: #666 !default;
$highlightColor: #ccc !default;
$activeColor: #2098D1 !default;
$shadowColor: rgba(0, 0, 0, .6) !default;

// Speech bubbles options
$tipWidth: 10px !default;  //the width of the speech bubble tip
$tipHeight: 10px !default; //the height of the speech bubble tip
$tipColor: $primaryColor !default;

// Arrows options
$spaceBetweenTextAndArrows: 2.2em !default;

// Curl dimensions
$curlWidth: 25px !default;
$curlHeight: 25px !default;

// Curl colors
$revealAreaColor: white !default;    // reveal area behind the curl
$curlLineColor: #aaa !default;       // crease line
$curlTransitionColor: #ccc !default;	// color transitioning from crease line to final color
$curlLastColor: white !default;		// final color of the back of the curl

// Browser Prefixes - Which CSS prefixes should be used?
$webkit: true !default;
$moz: false !default;
$ms: false !default;
$o: false !default;

// Compile with or without classes
$includeClasses: true !default;

/* Underline From Left */
@mixin underline-from-left {
	$duration: $mediumDuration;

	@include hacks();
	position: relative;

	&:before {
		content: "";
		position: absolute;
		z-index: -1;
		left: 0;
		right: 100%;
		bottom: 0;
		background: $white;
		height: 1px;
		@include prefixed(transition-property, "right");
		@include prefixed(transition-duration, $duration);
		@include prefixed(transition-timing-function, ease-out);
	}

	&:hover,
	&:focus,
	&:active {

		&:before {
			right: 0;
		}
	}
}

// prefix declarations
@mixin prefixed($property, $value) {
  @if $webkit == true {
    -webkit-#{$property}: #{$value};
  }

  @if $moz == true {
    -moz-#{$property}: #{$value};
  }

  @if $ms == true {
    -ms-#{$property}: #{$value};
  }

  @if $o == true {
    -o-#{$property}: #{$value};
  }

  #{$property}: #{$value};
}

// prefix keyframes
@mixin keyframes($name) {
  @if $webkit == true {
    @-webkit-keyframes #{$name} {
      @content;
    }
  }

  @if $moz == true {
    @-moz-keyframes #{$name} {
      @content;
    }
  }

  @if $ms == true {
    @-ms-keyframes #{$name} {
      @content;
    }
  }

  @if $o == true {
    @-o-keyframes #{$name} {
      @content;
    }
  }

  @keyframes #{$name} {
    @content;
  }
}

// As is often the case, some devices/browsers need additional code to get CSS to work
// in the most desired way. These mixins are used to quickly drop in hacks for each element
// Find out more here: https://github.com/IanLunn/Hover/wiki/Hacks-Explained

@mixin hardwareAccel() {
	// Improve performance on mobile/tablet devices
	// Perspective reduces blurryness of text in Chrome
	@include prefixed(transform, perspective(1px) translateZ(0));
}

@mixin improveAntiAlias() {
	// Improve aliasing on mobile/tablet devices
	box-shadow: 0 0 1px rgba(0, 0, 0, 0);
}

@mixin forceBlockLevel() {
	// Transforms need to be block-level to work
	display: inline-block;
	vertical-align: middle;
}

@mixin hacks() {
	@include forceBlockLevel();
	@include hardwareAccel();
	@include improveAntiAlias();
}

@mixin align-left($col-count) {
  $gutter-adjust: #{$grid-gutter};
  @if $col-count > 1 {
    $gutter-adjust: #{$grid-gutter};
  }

  margin-left: 0;
  .container-fullright {
    padding-right: 15px;
  }

  @include rwd(tablet-up) {
    .container-fullright {
      margin: 0 auto 0 0;
    }
  }

  @include rwd(tablet-up) {
    margin: 0 7%;
    .container-fullright {
      padding: 0;
      max-width: none;

    }
  }

  @include rwd(desktop-up) {
    margin: 0 0 0 calc(((100% - #{$container-desktop-small}) / 2) + #{$col-desktop} * #{$col-count} + #{$gutter-adjust});
    .container-fullright {
      padding-right: calc(#{$grid-gutter} * #{$col-count});
      max-width: calc(#{$container-desktop-small} - #{$col-desktop} * #{$col-count+1});
    }
  }

  @include rwd(wide-up) {
    margin: 0 0 0 calc(((100% - #{$container-desktop-wide}) / 2) + #{$col-count} * #{$col-desktop-wide} + #{$gutter-adjust});
    .container-fullright {
      padding-right: calc(#{$grid-gutter} * #{$col-count});
      max-width: calc(#{$container-desktop-wide} - #{$col-desktop-wide} * #{$col-count+1});
    }
  }
}

@mixin highlight($solution-highlight) {
  .text-blue {
    color: $solution-highlight;
  }
  .round-cta:not(.clear), #modal-form #form-submit {
    background-color: $solution-highlight !important;
    border: none;
    &:hover {
      background-color: darken($solution-highlight, 10%) !important;
    }
  }
  .round-cta:not(.no-arrow).dark:after {
    background: $solution-highlight url(../uploads/global/arrow-right-white.svg) no-repeat center;
    background-size: 16px;
  }
  main ion-icon {
    color: $solution-highlight !important;
  }
  .success__wrapper {
    background: linear-gradient(113.49deg, lighten($solution-highlight, 10%) 14.71%, $solution-highlight 83.06%);
  }
  .header .menu-item-cta.bg-from-below {
    &:after {
      background: $solution-highlight;
    }
    &:hover:after {
      background: darken($solution-highlight, 10%);
    }
  }
  .plyr--full-ui input[type=range] {
    color: $solution-highlight;
  }
  .plyr--video .plyr__control.plyr__tab-focus, .plyr--video .plyr__control:hover, .plyr--video .plyr__control[aria-expanded=true] {
    background: $solution-highlight;
  }
  .bg-box__box {
    border-left-color: $solution-highlight;
  }
}
